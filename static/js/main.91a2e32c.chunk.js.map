{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","swiped","Icon","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UA0BeA,MApBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAG3C,qBACIA,UAAU,eACVG,IAAI,+EACJC,IAAI,SAER,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,kECbvCK,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,oDCEE,SAASC,IACpB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBR,EAAMS,IAAI,iBADhC,OACUC,EADV,OAEIJ,EAAUI,EAAIC,MAFlB,4CADY,uBAAC,WAAD,wBAMZC,KACD,IAWH,OACI,qBAAKlB,UAAU,cAAf,SACI,qBAAKA,UAAU,6BAAf,SACKW,EAAOQ,KAAI,SAAAC,GACR,OACI,cAAC,IAAD,CACIpB,UAAU,QAEVqB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAlBNC,EAkB2BJ,EAAOK,UAjBzDC,QAAQC,IAAI,YAAaH,GADd,IAAYA,GAmBHI,iBAAkB,kBAdtBH,EAcuCL,EAAOK,UAb9DC,QAAQC,IAAIF,EAAM,mBADH,IAACA,GASA,SAOI,qBACII,MAAO,CAAEC,gBAAgB,OAAD,OAASV,EAAOW,OAAhB,MACxB/B,UAAU,OAFd,SAKI,6BAAKoB,EAAOK,UAVXL,EAAOK,a,wGCxBzB,SAASO,IACpB,IAAIC,EAAS,aACb,OACI,sBAAKjC,UAAU,eAAf,UAEI,cAACkC,EAAA,EAAD,CAAYC,QAASF,EAAQjC,UAAU,mCAAvC,SACI,cAAC,IAAD,CAAYE,SAAS,YAGzB,cAACgC,EAAA,EAAD,CAAYC,QAASF,EAAQjC,UAAU,iCAAvC,SACI,cAAC,IAAD,CAAWE,SAAS,YAGxB,cAACgC,EAAA,EAAD,CAAYC,QAASF,EAAQjC,UAAU,iCAAvC,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACgC,EAAA,EAAD,CAAYC,QAASF,EAAQjC,UAAU,kCAAvC,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACgC,EAAA,EAAD,CAAYC,QAASF,EAAQjC,UAAU,sCAAvC,SACI,cAAC,IAAD,CAAaE,SAAS,eChBvBkC,MAVf,WACE,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91a2e32c.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nimport PersonIcon from '@material-ui/icons/Person';\nimport IconButton from '@material-ui/core/IconButton';\nimport ForumIcon from '@material-ui/icons/Forum'; \n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <IconButton>\n                <PersonIcon fontSize='large' className=\"header__icon\"/>\n            </IconButton>\n\n            <img \n                className=\"header__logo\"\n                src='https://www.vectorico.com/wp-content/uploads/2018/02/Tinder-Logo-253x300.png'\n                alt='logo'\n            />\n            <IconButton>\n                <ForumIcon fontSize='large' className=\"header__icon\"/>\n            </IconButton>\n\n        </div>\n    )\n}\n\nexport default Header;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://lesdocode-tinder-backend.herokuapp.com/'\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport './TinderCards.css';\nimport TinderCard from 'react-tinder-card';\nimport axios from './axios';\n\nexport default function TinderCards() {\n    const [people, setPeople] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const req = await axios.get('/tinder/cards');\n            setPeople(req.data);\n        }\n\n        fetchData();\n    }, [])\n\n    const swiped = (direction, nameToDelete) => {\n        console.log('removing:', nameToDelete);\n        //setLastDirection(direction);\n    }\n\n    const outOfFrame = (name) => {\n        console.log(name, \"left the screen\");\n    }\n\n    return (\n        <div className='tinderCards'>\n            <div className='tinderCards__cardContainer'>\n                {people.map(person => {\n                    return (\n                        <TinderCard\n                            className='swipe'\n                            key={person.name}\n                            preventSwipe={[\"up\", \"down\"]}\n                            onSwipe={(dir) => swiped(dir, person.name)}\n                            onCardLeftScreen={() => outOfFrame(person.name)}\n                        >\n                            <div\n                                style={{ backgroundImage: `url(${person.imgUrl})`}}\n                                className='card'\n                            >\n\n                                <h3>{person.name}</h3>\n                            </div>\n\n                        </TinderCard>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './SwipeButtons.css';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport IconButton from '@material-ui/core/Icon';\n\nexport default function SwipeButtons() {\n    let swiped = () => {};\n    return (\n        <div className='swipeButtons'>\n\n            <IconButton onClick={swiped} className='swipedButtons__repeat iconButton'>\n                <ReplayIcon fontSize='large' />\n            </IconButton>\n\n            <IconButton onClick={swiped} className='swipedButtons__left iconButton'>\n                <CloseIcon fontSize='large' />\n            </IconButton>\n\n            <IconButton onClick={swiped} className='swipedButtons__star iconButton'>\n                <StarRateIcon fontSize='large' />\n            </IconButton>\n\n            <IconButton onClick={swiped} className='swipedButtons__right iconButton'>\n                <FavoriteIcon fontSize='large' />\n            </IconButton>\n\n            <IconButton onClick={swiped} className='swipedButtons__lightning iconButton'>\n                <FlashOnIcon fontSize='large' />\n            </IconButton>\n\n        </div>\n    )\n}\n","import './App.css';\nimport Header from './Header';\nimport TinderCards from './TinderCards';\nimport SwipeButtons from './SwipeButtons';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <TinderCards />\n      <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}